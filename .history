:q
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1)
:q
:t even
:t odd
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1)
:q
let const x y = x 
const true 1 
:q
const true
const true 1
const 1 true
let const x y = x
:q
even 1275
odd 1
odd 0
odd 101
even 100
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1)
:q
:qu
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1) in even 100
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1) in odd 100
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1) in odd false
:q
:t 1
:t let id x = x in id
:r
:q
let id x = x in id 
let id x = x in id 1
let id x = x in id true
let id x = x in id 10 + 1
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1) in odd false
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1) in odd 100
let rec even n = if n == 0 then true else odd (n - 1) and odd k = if k == 0 then false else even (k - 1) in even 100
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 100
:q
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 100
:q
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 100
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 100
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 1
1 + let val x = 2 in x
1 + let x = 2 in x
let fun fact n = if n == 0 then 1 else n * (fact (n - 1)) in fact 5
let fun f x = x + 1 and fun g x = x * 2 in g (f 10)
let val x = 1 and val y = 2 in x + y
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 1
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 2
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 0
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in even 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd k = if k == 0 then false else even (k - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd n = if n == 0 then false else even (n - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd n = if n == 0 then false else even (n - 1) in odd 11
let fun even n = if n == 0 then true else odd (n - 1) and fun odd n = if n == 0 then false else even (n - 1) in odd 11
let fun f x = x + 1 and fun g x = x * 2 in g (f 10)
let val x = 1 and val y = 2 in x + y
let val x = 1 and val y = 2 in x + y
:quit 
let fun f x = x + 1 and fun g x = x * 2 in g (f 10)
let val x = 1 and val y = 2 in x + y
let val x = 1 and val y = 2 in x + y
let val x = 1 and val y = 2 in x + y
let val x = 1 and val y = 2 in x + y
:quit 
let fun fact n = if n == 0 then 1 else n * (fact (n - 1)) in fact 6
let fun fact n = if n == 0 then 1 else n * (fact (n - 1)) in fact 5
let fun fact n = if n == 0 then 1 else n * (fact (n - 1)) in fact 4
:quit 
let val x = 2 in x + 5 
let fun fact n = if n == 0 then 1 else n * (fact (n - 1)) in fact 4
let val x = 1 and val y = 5 in x + y
1 +  1  
1 + 1
